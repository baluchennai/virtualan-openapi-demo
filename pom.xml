<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.virtualan</groupId>
	<artifactId>Virtualized-pet-Service</artifactId>
	<packaging>jar</packaging>
	<name>Virtualized Service Pet Sample</name>
	<version>1.0.0</version>
	<properties>
		<virtualan.version>1.2.2</virtualan.version>
		<cucumber.version>1.2.5</cucumber.version>
	</properties>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.1.RELEASE</version>
	</parent>
	<build>
		<finalName>virtualan-pet</finalName>
		<sourceDirectory>src/main/java</sourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<id>pet-service-vs-api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/external/petstore.yaml</inputSpec>
							<output>${project.basedir}/target/external/</output>
							<apiPackage>org.openapitools.virtualan.api</apiPackage>
							<modelPackage>org.openapitools.virtualan.to</modelPackage>
							<generatorName>spring</generatorName>
							<configOptions>
                                <virtualService>true</virtualService>
                            </configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin> 
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.1</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}/target/external/src/gen/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.20.0</version>
				<extensions>true</extensions>
				<configuration>
					<registry>registry.hub.docker.com/virtualan</registry>
					<verbose>true</verbose>
					<follow>true</follow>
					<images>
						<image>
							<alias>openapi-virtualan</alias>
							<name>openapi-virtualan:${project.version}</name>
							<build>
								<dockerFileDir>${project.basedir}/src/main/docker/virtualan</dockerFileDir>
								<tags>
									<tag>${project.version}</tag>
								</tags>
								<assembly>
									<inline>
										<files>
											<file>
												<source>${project.build.directory}/${project.build.finalName}.jar</source>
												<outputDirectory>.</outputDirectory>
												</file>
										</files>
									</inline>
								</assembly>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- START Virtual Service API support -->
		<dependency>
			<groupId>io.virtualan</groupId>
			<artifactId>virtualan-plugin</artifactId>
			<version>${virtualan.version}</version>
		</dependency>

		<!-- HyperSQL DB -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
		</dependency>
		<!-- END Virtual Service API support -->
		


		<!-- Setup BDD Test cases -->
		
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>3.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java8</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>${cucumber.version}</version>
			<scope>test</scope>
		</dependency>
		
	</dependencies>
</project>
